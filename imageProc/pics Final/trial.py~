# coding: utf-8
import cv2
image = cv2.imread('1.bmp')
image_bw = cv2.cvtColor(image,cv2.COLOR_BGR2GRAY)
circ = cv2.HoughCircles(image_bw,cv2.HOUGH_GRADIENT,1.2,100,minRadius=50,maxRadius=300)
print(circ)
x,y,r=circ[0][0]
x=int(x)
y=int(y)
r=int(r)
caaa = image.copy()
cv2.circle(caaa,(x,y),r,(0,255,0))
cv2.imshow("test",caaa)
cv2.waitKey(5000)
get_ipython().magic('clear ')



import cv2
import numpy as np
image = cv2.imread('1.bmp')
image_bw = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
retval, threshimg = cv2.threshold(image_bw,0,255,cv2.THRESH_BINARY+cv2.THRESH_OTSU)
filter = cv2.erode(threshimg,kernel = np.ones((5,5),np.uint8), iterations = 10)
get_ipython().magic('paste ')
circ
mask = np.zeros(480,640)
mask = np.zeros((480,640))
mask
mask.shape
th1.shape
x
x,y,r = circ[0,0].astype("int")
x
y
r
for i in range(0,480):
    for j in range(0,640):
        dx = i-x
        dy = j-y
        mask[i,j]= ((dx**2)+(dy**2))<=r**2
        
plt.imshow(mask)
plt.show()
plt.imshow(th1)
plt.show()
get_ipython().magic('pinfo np.around')
get_ipython().magic('pinfo np.uint8')
np.uint8
get_ipython().magic('pinfo np.uint16')
get_ipython().magic('pinfo2 np.uint8')
get_ipython().magic('pinfo np.uint')
circ
circ = cv2.HoughCircles(th1, cv2.HOUGH_GRADIENT, 1, minDist = 400, minRadius = 100, param1 = 50,param2=30)
circ
circ = cv2.HoughCircles(th1, cv2.HOUGH_GRADIENT, 1, minDist = 400, minRadius = 100)
circ
plt.imshow(th1)
plt.show()
mask = np.zeros((480,640))
for i in range(0,480):
    for j in range(0,640):
        dx = i-x
        dy = j-y
        mask[i,j]= ((dx**2)+(dy**2))<=r**2
        
mask
plt.imshow(mask)
plt.show()
get_ipython().magic('pinfo cv2.circle')
cv2.circle(mask,(x,y),r,(255,255,255),2)
plt.imshow(mask)
plt.show()
th1.shape
th1
for i in range(0,480):
    for j in range(0,640):
        dx = i-y
        dy = j-x
        mask[i,j]= ((dx**2)+(dy**2))<=r**2
        
mask
plt.imshow(mask)
plt.show()
plt.imshow(mask)
plt.show()
get_ipython().magic('pinfo np.dot')
get_ipython().magic('pinfo np.prod')
get_ipython().magic('pinfo np.product')
get_ipython().magic('pinfo np.multiply')
ans = numpy.multiply(th1,mask)
ans = np.multiply(th1,mask)
plt.imshow(ansO
)
plt.imshow(ans)
plt.show()
for i in range(0,480):
    for j in range(0,640):
        dx = i-y
        dy = j-x
        mask[i,j]= ((dx**2)+(dy**2))<=(r+20)**2
        
mask = np.zeros((480,640))
for i in range(0,480):
    for j in range(0,640):
        dx = i-y
        dy = j-x
        mask[i,j]= ((dx**2)+(dy**2))<=(r+20)**2
        
ans = np.multiply(th1,mask)
plt.imshow(ans)
plt.show()
ans1=ans.copy()
dilate=cv2.convertScaleAbs(dilate)
a,cnts,b=cv2.findContours(closing,cv2.RETR_LIST,cv2.CHAIN_APPROX_SIMPLE)
max_area=0
for c in cnts:
    area=cv2.contourArea(c)
    if area>max_area:
        max_area=area
        best_cnt=c
        
M=cv2.moments(best_cnt)
a1=cv2.contourArea(best_cnt)
image2=image.copy()
cv2.drawContours(image2,[best_cnt],-1,(0,255,0),2)
plt.imshow(image2)
plt.show()
r=(a1/3.14159)**0.5

